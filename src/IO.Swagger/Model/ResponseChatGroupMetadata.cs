/* 
 * API whatsgate.ru
 *
 * Интерфейс для взаимодействия с клиентом Whatsapp
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Метаданные группы, если чат является группой
    /// </summary>
    [DataContract]
        public partial class ResponseChatGroupMetadata :  IEquatable<ResponseChatGroupMetadata>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResponseChatGroupMetadata" /> class.
        /// </summary>
        /// <param name="id">Идентификатор группы в формате WhatsApp.</param>
        /// <param name="creation">Дата создания группы в формате Unix Time Stamp.</param>
        /// <param name="owner">Идентификатор создателя группы в формате WhatsApp.</param>
        /// <param name="size">Количество участников в группе.</param>
        /// <param name="participants">Массив участников.</param>
        public ResponseChatGroupMetadata(string id = default(string), int? creation = default(int?), string owner = default(string), int? size = default(int?), List<ResponseChatGroupMetadataParticipants> participants = default(List<ResponseChatGroupMetadataParticipants>))
        {
            this.Id = id;
            this.Creation = creation;
            this.Owner = owner;
            this.Size = size;
            this.Participants = participants;
        }
        
        /// <summary>
        /// Идентификатор группы в формате WhatsApp
        /// </summary>
        /// <value>Идентификатор группы в формате WhatsApp</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Дата создания группы в формате Unix Time Stamp
        /// </summary>
        /// <value>Дата создания группы в формате Unix Time Stamp</value>
        [DataMember(Name="creation", EmitDefaultValue=false)]
        public int? Creation { get; set; }

        /// <summary>
        /// Идентификатор создателя группы в формате WhatsApp
        /// </summary>
        /// <value>Идентификатор создателя группы в формате WhatsApp</value>
        [DataMember(Name="owner", EmitDefaultValue=false)]
        public string Owner { get; set; }

        /// <summary>
        /// Количество участников в группе
        /// </summary>
        /// <value>Количество участников в группе</value>
        [DataMember(Name="size", EmitDefaultValue=false)]
        public int? Size { get; set; }

        /// <summary>
        /// Массив участников
        /// </summary>
        /// <value>Массив участников</value>
        [DataMember(Name="participants", EmitDefaultValue=false)]
        public List<ResponseChatGroupMetadataParticipants> Participants { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ResponseChatGroupMetadata {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Creation: ").Append(Creation).Append("\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  Size: ").Append(Size).Append("\n");
            sb.Append("  Participants: ").Append(Participants).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ResponseChatGroupMetadata);
        }

        /// <summary>
        /// Returns true if ResponseChatGroupMetadata instances are equal
        /// </summary>
        /// <param name="input">Instance of ResponseChatGroupMetadata to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ResponseChatGroupMetadata input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Creation == input.Creation ||
                    (this.Creation != null &&
                    this.Creation.Equals(input.Creation))
                ) && 
                (
                    this.Owner == input.Owner ||
                    (this.Owner != null &&
                    this.Owner.Equals(input.Owner))
                ) && 
                (
                    this.Size == input.Size ||
                    (this.Size != null &&
                    this.Size.Equals(input.Size))
                ) && 
                (
                    this.Participants == input.Participants ||
                    this.Participants != null &&
                    input.Participants != null &&
                    this.Participants.SequenceEqual(input.Participants)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Creation != null)
                    hashCode = hashCode * 59 + this.Creation.GetHashCode();
                if (this.Owner != null)
                    hashCode = hashCode * 59 + this.Owner.GetHashCode();
                if (this.Size != null)
                    hashCode = hashCode * 59 + this.Size.GetHashCode();
                if (this.Participants != null)
                    hashCode = hashCode * 59 + this.Participants.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
