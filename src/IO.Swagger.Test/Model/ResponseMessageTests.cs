/* 
 * API whatsgate.ru
 *
 * Интерфейс для взаимодействия с клиентом Whatsapp
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ResponseMessage
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ResponseMessageTests
    {
        // TODO uncomment below to declare an instance variable for ResponseMessage
        //private ResponseMessage instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ResponseMessage
            //instance = new ResponseMessage();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ResponseMessage
        /// </summary>
        [Test]
        public void ResponseMessageInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ResponseMessage
            //Assert.IsInstanceOfType<ResponseMessage> (instance, "variable 'instance' is a ResponseMessage");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Ack'
        /// </summary>
        [Test]
        public void AckTest()
        {
            // TODO unit test for the property 'Ack'
        }
        /// <summary>
        /// Test the property 'HasMedia'
        /// </summary>
        [Test]
        public void HasMediaTest()
        {
            // TODO unit test for the property 'HasMedia'
        }
        /// <summary>
        /// Test the property 'MediaKey'
        /// </summary>
        [Test]
        public void MediaKeyTest()
        {
            // TODO unit test for the property 'MediaKey'
        }
        /// <summary>
        /// Test the property 'Body'
        /// </summary>
        [Test]
        public void BodyTest()
        {
            // TODO unit test for the property 'Body'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Test]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }
        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Test]
        public void FromTest()
        {
            // TODO unit test for the property 'From'
        }
        /// <summary>
        /// Test the property 'To'
        /// </summary>
        [Test]
        public void ToTest()
        {
            // TODO unit test for the property 'To'
        }
        /// <summary>
        /// Test the property 'IsForwarded'
        /// </summary>
        [Test]
        public void IsForwardedTest()
        {
            // TODO unit test for the property 'IsForwarded'
        }

    }

}
